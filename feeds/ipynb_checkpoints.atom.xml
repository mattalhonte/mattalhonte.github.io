<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Without a Bunch of Nonsense - .ipynb_checkpoints</title><link href="http://mattalhonte.github.io/" rel="alternate"></link><link href="http://mattalhonte.github.io/feeds/ipynb_checkpoints.atom.xml" rel="self"></link><id>http://mattalhonte.github.io/</id><updated>2018-03-14T20:14:41-04:00</updated><entry><title>Without a Bunch of Nonsense</title><link href="http://mattalhonte.github.io/without-a-bunch-of-nonsense.html" rel="alternate"></link><published>2018-03-14T20:14:41-04:00</published><updated>2018-03-14T20:14:41-04:00</updated><author><name>Matthew Alhonte</name></author><id>tag:mattalhonte.github.io,2018-03-14:/without-a-bunch-of-nonsense.html</id><summary type="html">&lt;p&gt;What's this blog all about?&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've picked this title because I thought it was a good balance between being Easy To Remember while also being sufficiently Google-able.  Furthermore, I think it encapsulates a concept that's important to me.&lt;/p&gt;
&lt;p&gt;So, what do I mean by "Without a Bunch of Nonsense"?  Well, here's a non-exhaustive list of related concepts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Batteries included&lt;/li&gt;
&lt;li&gt;Sensible defaults&lt;/li&gt;
&lt;li&gt;(It) Just works&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's about avoiding &lt;strong&gt; Decision Fatigue&lt;/strong&gt; by not falling prey to the &lt;strong&gt; Optimizer's Curse&lt;/strong&gt;.  What does that mean?  Imagine if every time you lowered a car window, you had to input how fast you wanted the window to go down.  Maybe you &lt;em&gt;do&lt;/em&gt; have a preference, but the difference in what you gain by getting your most-preferred option over your least-preferred option is smaller than what you lose by thinking about it, mapping that preference onto the available options, and inputting it.  &lt;/p&gt;
&lt;p&gt;It's about recognizing that &lt;strong&gt;Task-Switching Costs&lt;/strong&gt; can nickel-and-dime your time and attention away.  That whatever you're building is going to be a small part of your end-user's life, and so it should detract as possible from their main task.  It's about seeing on StackOverflow that you need to install Thing A, and then you &lt;code&gt;sudo apt-get install Thing A -y&lt;/code&gt; and then it installs without asking you any questions or otherwise requiring anything of you, and then it works and doesn't break your Postgres config or do anything weird to your terminal.&lt;/p&gt;
&lt;p&gt;It's about that moment when you get an error message that then suggests a command to copy-paste in next, which then actually fixes the situation.  It's error messages the way Francois Chollet (&amp;amp; team) of Keras writes them - actually, it's pretty much everything in &lt;a href="https://blog.keras.io/user-experience-design-for-apis.html"&gt;this blog post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It's going from trying to install NumPy on Windows in the pre-Anaconda days (a provably impossible proposition) vs just running &lt;code&gt;conda install numpy -y&lt;/code&gt; and taking care of everything.&lt;/p&gt;
&lt;p&gt;It's about being mindful of imposing &lt;strong&gt;Cognitive Load&lt;/strong&gt;.  One flavor of nonsense is what I'll call &lt;strong&gt;Unnecessary Nuance&lt;/strong&gt;.  A high-resolution picture is not always better than a low-resolution picture.  GTA games would be a lot less fun for most people if the in-game driving had the same level of complexity as driving a real car.  &lt;/p&gt;
&lt;p&gt;It's about 
&lt;em&gt; Not forcing you to make decisions before you know what the tradeoffs are
&lt;/em&gt; Tweak-friendly environments with quick feedback loops &amp;amp; consequence-free reversibility
* Interactive programming environments (REPLs, Notebooks)&lt;/p&gt;
&lt;p&gt;"Nonsense" is not an inherent property of a thing.  Something being nonsense is a function of both the thing itself and the user interacting with it.  Greek is a language, but if I don't speak it, then it's all Greek to me.  Maybe there's a question that gets asked during your installation process that actually is vital - &lt;strong&gt;but if your user doesn't understand the relevant tradeoffs, it's nonsense&lt;/strong&gt;.  Now for some applications, it might be reasonable to assume that your user is familiar with the relevant jargon - but do be mindful of the possibility that someone might want to get some use out of who doesn't know that jargon.&lt;/p&gt;
&lt;p&gt;Sooo, I made this blog to expound on this topic, right?  Well, no - I may or may not ever mention it again.  Really, I made this blog because I've been doing data science stuff in industry for a while, but want to go back to academic scientific research, which will involve writing, which I haven't really done a lot of in the past few years.  We'll see what, if anything, this blog winds up turning into.&lt;/p&gt;</content><category term="philosophy"></category><category term="Without a Bunch of Nonsense"></category></entry></feed>